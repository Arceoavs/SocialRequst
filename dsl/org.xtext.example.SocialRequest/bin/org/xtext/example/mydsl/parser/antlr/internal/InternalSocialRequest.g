/*
 * generated by Xtext 2.21.0
 */
grammar InternalSocialRequest;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.SocialRequestGrammarAccess;

}

@parser::members {

 	private SocialRequestGrammarAccess grammarAccess;

    public InternalSocialRequestParser(TokenStream input, SocialRequestGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SocialRequestGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_0_0());
				}
				lv_entities_0_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"entities",
						lv_entities_0_0,
						"org.xtext.example.mydsl.SocialRequest.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getRepositoriesRepositoryParserRuleCall_1_0());
				}
				lv_repositories_1_0=ruleRepository
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"repositories",
						lv_repositories_1_0,
						"org.xtext.example.mydsl.SocialRequest.Repository");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_hasUserDetails_2_0='implements'
					{
						newLeafNode(lv_hasUserDetails_2_0, grammarAccess.getEntityAccess().getHasUserDetailsImplementsKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getEntityRule());
						}
						setWithLastConsumed($current, "hasUserDetails", true, "implements");
					}
				)
			)
			otherlv_3='UserDetails'
			{
				newLeafNode(otherlv_3, grammarAccess.getEntityAccess().getUserDetailsKeyword_2_1());
			}
		)?
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getAttributesAttributeParserRuleCall_4_0());
				}
				lv_attributes_5_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_5_0,
						"org.xtext.example.mydsl.SocialRequest.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getAssociationASSOCIATIONParserRuleCall_0_0());
				}
				lv_association_0_0=ruleASSOCIATION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"association",
						lv_association_0_0,
						"org.xtext.example.mydsl.SocialRequest.ASSOCIATION");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeRefTypeReferenceParserRuleCall_3_0());
				}
				lv_typeRef_3_0=ruleTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"typeRef",
						lv_typeRef_3_0,
						"org.xtext.example.mydsl.SocialRequest.TypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getModifierModifierParserRuleCall_4_0());
				}
				lv_modifier_4_0=ruleModifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"modifier",
						lv_modifier_4_0,
						"org.xtext.example.mydsl.SocialRequest.Modifier");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_5_0());
			}
			(
				(
					{ 
					  getUnorderedGroupHelper().enter(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1());
					}
					(
						(
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1(), 0)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1(), 0);
						}
									({true}?=>(otherlv_7='mappedBy:'
									{
										newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getMappedByKeyword_5_1_0_0());
									}
									(
										(
											lv_mappedBy_8_0=RULE_ID
											{
												newLeafNode(lv_mappedBy_8_0, grammarAccess.getAttributeAccess().getMappedByIDTerminalRuleCall_5_1_0_1_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getAttributeRule());
												}
												setWithLastConsumed(
													$current,
													"mappedBy",
													lv_mappedBy_8_0,
													"org.eclipse.xtext.common.Terminals.ID");
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1(), 1)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1(), 1);
						}
									({true}?=>(otherlv_9='fetch:'
									{
										newLeafNode(otherlv_9, grammarAccess.getAttributeAccess().getFetchKeyword_5_1_1_0());
									}
									(
										(
											lv_fetchType_10_0=RULE_FETCHTYPE
											{
												newLeafNode(lv_fetchType_10_0, grammarAccess.getAttributeAccess().getFetchTypeFETCHTYPETerminalRuleCall_5_1_1_1_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getAttributeRule());
												}
												setWithLastConsumed(
													$current,
													"fetchType",
													lv_fetchType_10_0,
													"org.xtext.example.mydsl.SocialRequest.FETCHTYPE");
											}
										)
									)
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1());
						}
					)
				)|
				(
					{getUnorderedGroupHelper().canSelect(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1(), 2)}?=>(
						{
							getUnorderedGroupHelper().select(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1(), 2);
						}
									({true}?=>(otherlv_11='validations'
									{
										newLeafNode(otherlv_11, grammarAccess.getAttributeAccess().getValidationsKeyword_5_1_2_0());
									}
									otherlv_12='{'
									{
										newLeafNode(otherlv_12, grammarAccess.getAttributeAccess().getLeftCurlyBracketKeyword_5_1_2_1());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getAttributeAccess().getValidationsValidationParserRuleCall_5_1_2_2_0());
											}
											lv_validations_13_0=ruleValidation
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getAttributeRule());
												}
												add(
													$current,
													"validations",
													lv_validations_13_0,
													"org.xtext.example.mydsl.SocialRequest.Validation");
												afterParserOrEnumRuleCall();
											}
										)
									)+
									otherlv_14='}'
									{
										newLeafNode(otherlv_14, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5_1_2_3());
									}
									))
						{ 
							getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1());
						}
					)
				)
						)*
					)
				)
					{ 
					  getUnorderedGroupHelper().leave(grammarAccess.getAttributeAccess().getUnorderedGroup_5_1());
					}
			)
			otherlv_15='}'
			{
				newLeafNode(otherlv_15, grammarAccess.getAttributeAccess().getRightCurlyBracketKeyword_5_2());
			}
		)?
	)
;

// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeReferenceRule()); }
	iv_ruleTypeReference=ruleTypeReference
	{ $current=$iv_ruleTypeReference.current; }
	EOF;

// Rule TypeReference
ruleTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getEntityTypeReferenceParserRuleCall_0());
		}
		this_EntityTypeReference_0=ruleEntityTypeReference
		{
			$current = $this_EntityTypeReference_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeReferenceAccess().getDataTypeReferenceParserRuleCall_1());
		}
		this_DataTypeReference_1=ruleDataTypeReference
		{
			$current = $this_DataTypeReference_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleEntityTypeReference
entryRuleEntityTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityTypeReferenceRule()); }
	iv_ruleEntityTypeReference=ruleEntityTypeReference
	{ $current=$iv_ruleEntityTypeReference.current; }
	EOF;

// Rule EntityTypeReference
ruleEntityTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getEntityTypeReferenceRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getEntityTypeReferenceAccess().getTypeEntityCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleDataTypeReference
entryRuleDataTypeReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataTypeReferenceRule()); }
	iv_ruleDataTypeReference=ruleDataTypeReference
	{ $current=$iv_ruleDataTypeReference.current; }
	EOF;

// Rule DataTypeReference
ruleDataTypeReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getDataTypeReferenceAccess().getTypeDataTypeEnumRuleCall_0());
			}
			lv_type_0_0=ruleDataType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getDataTypeReferenceRule());
				}
				set(
					$current,
					"type",
					lv_type_0_0,
					"org.xtext.example.mydsl.SocialRequest.DataType");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleModifier
entryRuleModifier returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModifierRule()); }
	iv_ruleModifier=ruleModifier
	{ $current=$iv_ruleModifier.current; }
	EOF;

// Rule Modifier
ruleModifier returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isLOB_0_0='LOB'
				{
					newLeafNode(lv_isLOB_0_0, grammarAccess.getModifierAccess().getIsLOBLOBKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModifierRule());
					}
					setWithLastConsumed($current, "isLOB", true, "LOB");
				}
			)
		)
		    |
		(
			(
				lv_isTransient_1_0='TRANSIENT'
				{
					newLeafNode(lv_isTransient_1_0, grammarAccess.getModifierAccess().getIsTransientTRANSIENTKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModifierRule());
					}
					setWithLastConsumed($current, "isTransient", true, "TRANSIENT");
				}
			)
		)
		    |
		(
			(
				(
					lv_isID_2_0='ID'
					{
						newLeafNode(lv_isID_2_0, grammarAccess.getModifierAccess().getIsIDIDKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getModifierRule());
						}
						setWithLastConsumed($current, "isID", true, "ID");
					}
				)
			)
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getModifierAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						lv_IDGenerationType_4_0=RULE_GENERATIONTYPE
						{
							newLeafNode(lv_IDGenerationType_4_0, grammarAccess.getModifierAccess().getIDGenerationTypeGENERATIONTYPETerminalRuleCall_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getModifierRule());
							}
							setWithLastConsumed(
								$current,
								"IDGenerationType",
								lv_IDGenerationType_4_0,
								"org.xtext.example.mydsl.SocialRequest.GENERATIONTYPE");
						}
					)
				)
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getModifierAccess().getRightParenthesisKeyword_2_1_2());
				}
			)?
		)
	)
;

// Entry rule entryRuleValidation
entryRuleValidation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValidationRule()); }
	iv_ruleValidation=ruleValidation
	{ $current=$iv_ruleValidation.current; }
	EOF;

// Rule Validation
ruleValidation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='min:'
			{
				newLeafNode(otherlv_0, grammarAccess.getValidationAccess().getMinKeyword_0_0());
			}
			(
				(
					lv_min_1_0=RULE_POSSIBLY_SIGNED_INT
					{
						newLeafNode(lv_min_1_0, grammarAccess.getValidationAccess().getMinPOSSIBLY_SIGNED_INTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValidationRule());
						}
						setWithLastConsumed(
							$current,
							"min",
							lv_min_1_0,
							"org.xtext.example.mydsl.SocialRequest.POSSIBLY_SIGNED_INT");
					}
				)
			)
		)
		    |
		(
			otherlv_2='max:'
			{
				newLeafNode(otherlv_2, grammarAccess.getValidationAccess().getMaxKeyword_1_0());
			}
			(
				(
					lv_max_3_0=RULE_POSSIBLY_SIGNED_INT
					{
						newLeafNode(lv_max_3_0, grammarAccess.getValidationAccess().getMaxPOSSIBLY_SIGNED_INTTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValidationRule());
						}
						setWithLastConsumed(
							$current,
							"max",
							lv_max_3_0,
							"org.xtext.example.mydsl.SocialRequest.POSSIBLY_SIGNED_INT");
					}
				)
			)
		)
		    |
		(
			otherlv_4='pattern:'
			{
				newLeafNode(otherlv_4, grammarAccess.getValidationAccess().getPatternKeyword_2_0());
			}
			(
				(
					lv_regex_5_0=RULE_STRING
					{
						newLeafNode(lv_regex_5_0, grammarAccess.getValidationAccess().getRegexSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getValidationRule());
						}
						setWithLastConsumed(
							$current,
							"regex",
							lv_regex_5_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValidationAccess().getValidatorBASICVALIDATIONParserRuleCall_3_0());
				}
				lv_validator_6_0=ruleBASICVALIDATION
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValidationRule());
					}
					set(
						$current,
						"validator",
						lv_validator_6_0,
						"org.xtext.example.mydsl.SocialRequest.BASICVALIDATION");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBASICVALIDATION
entryRuleBASICVALIDATION returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBASICVALIDATIONRule()); }
	iv_ruleBASICVALIDATION=ruleBASICVALIDATION
	{ $current=$iv_ruleBASICVALIDATION.current.getText(); }
	EOF;

// Rule BASICVALIDATION
ruleBASICVALIDATION returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='NotNull'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBASICVALIDATIONAccess().getNotNullKeyword_0());
		}
		    |
		kw='NotBlank'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBASICVALIDATIONAccess().getNotBlankKeyword_1());
		}
		    |
		kw='Past'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBASICVALIDATIONAccess().getPastKeyword_2());
		}
		    |
		kw='Unique'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBASICVALIDATIONAccess().getUniqueKeyword_3());
		}
		    |
		kw='Email'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBASICVALIDATIONAccess().getEmailKeyword_4());
		}
	)
;

// Entry rule entryRuleASSOCIATION
entryRuleASSOCIATION returns [String current=null]:
	{ newCompositeNode(grammarAccess.getASSOCIATIONRule()); }
	iv_ruleASSOCIATION=ruleASSOCIATION
	{ $current=$iv_ruleASSOCIATION.current.getText(); }
	EOF;

// Rule ASSOCIATION
ruleASSOCIATION returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='OneToMany'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getASSOCIATIONAccess().getOneToManyKeyword_0());
		}
		    |
		kw='ManyToOne'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getASSOCIATIONAccess().getManyToOneKeyword_1());
		}
		    |
		kw='OneToOne'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getASSOCIATIONAccess().getOneToOneKeyword_2());
		}
		    |
		kw='ManyToMany'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getASSOCIATIONAccess().getManyToManyKeyword_3());
		}
	)
;

// Entry rule entryRuleRepository
entryRuleRepository returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRepositoryRule()); }
	iv_ruleRepository=ruleRepository
	{ $current=$iv_ruleRepository.current; }
	EOF;

// Rule Repository
ruleRepository returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Repository'
		{
			newLeafNode(otherlv_0, grammarAccess.getRepositoryAccess().getRepositoryKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRepositoryRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getRepositoryAccess().getEntityEntityCrossReference_1_0());
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRepositoryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRepositoryAccess().getQueriesQueryParserRuleCall_3_0());
				}
				lv_queries_3_0=ruleQuery
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRepositoryRule());
					}
					add(
						$current,
						"queries",
						lv_queries_3_0,
						"org.xtext.example.mydsl.SocialRequest.Query");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getRepositoryAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleQuery
entryRuleQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueryRule()); }
	iv_ruleQuery=ruleQuery
	{ $current=$iv_ruleQuery.current; }
	EOF;

// Rule Query
ruleQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='query'
		{
			newLeafNode(otherlv_0, grammarAccess.getQueryAccess().getQueryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getQueryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQueryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					lv_isList_2_0=':'
					{
						newLeafNode(lv_isList_2_0, grammarAccess.getQueryAccess().getIsListColonKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getQueryRule());
						}
						setWithLastConsumed($current, "isList", true, ":");
					}
				)
			)
			otherlv_3='list'
			{
				newLeafNode(otherlv_3, grammarAccess.getQueryAccess().getListKeyword_2_1());
			}
		)?
		(
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_3_0());
			}
			(
				otherlv_5='params'
				{
					newLeafNode(otherlv_5, grammarAccess.getQueryAccess().getParamsKeyword_3_1_0());
				}
				otherlv_6='{'
				{
					newLeafNode(otherlv_6, grammarAccess.getQueryAccess().getLeftCurlyBracketKeyword_3_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getQueryAccess().getParamsParamParserRuleCall_3_1_2_0());
						}
						lv_params_7_0=ruleParam
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getQueryRule());
							}
							add(
								$current,
								"params",
								lv_params_7_0,
								"org.xtext.example.mydsl.SocialRequest.Param");
							afterParserOrEnumRuleCall();
						}
					)
				)*
				otherlv_8='}'
				{
					newLeafNode(otherlv_8, grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_3_1_3());
				}
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getQueryAccess().getSqlQuerySQLQueryParserRuleCall_3_2_0());
					}
					lv_sqlQuery_9_0=ruleSQLQuery
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getQueryRule());
						}
						set(
							$current,
							"sqlQuery",
							lv_sqlQuery_9_0,
							"org.xtext.example.mydsl.SocialRequest.SQLQuery");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getQueryAccess().getRightCurlyBracketKeyword_3_3());
			}
		)
	)
;

// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	iv_ruleParam=ruleParam
	{ $current=$iv_ruleParam.current; }
	EOF;

// Rule Param
ruleParam returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParamAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParamAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParamAccess().getTypeTypeReferenceParserRuleCall_2_0());
				}
				lv_type_2_0=ruleTypeReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.example.mydsl.SocialRequest.TypeReference");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSQLQuery
entryRuleSQLQuery returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSQLQueryRule()); }
	iv_ruleSQLQuery=ruleSQLQuery
	{ $current=$iv_ruleSQLQuery.current; }
	EOF;

// Rule SQLQuery
ruleSQLQuery returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSQLQueryAccess().getSelectSelectParserRuleCall_0_0());
				}
				lv_select_0_0=ruleSelect
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSQLQueryRule());
					}
					set(
						$current,
						"select",
						lv_select_0_0,
						"org.xtext.example.mydsl.SocialRequest.Select");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSQLQueryAccess().getFromFromParserRuleCall_1_0());
				}
				lv_from_1_0=ruleFrom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSQLQueryRule());
					}
					set(
						$current,
						"from",
						lv_from_1_0,
						"org.xtext.example.mydsl.SocialRequest.From");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSQLQueryAccess().getJoinsJoinParserRuleCall_2_0());
				}
				lv_joins_2_0=ruleJoin
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSQLQueryRule());
					}
					add(
						$current,
						"joins",
						lv_joins_2_0,
						"org.xtext.example.mydsl.SocialRequest.Join");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getSQLQueryAccess().getWhereWhereParserRuleCall_3_0());
				}
				lv_where_3_0=ruleWhere
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSQLQueryRule());
					}
					set(
						$current,
						"where",
						lv_where_3_0,
						"org.xtext.example.mydsl.SocialRequest.Where");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSQLQueryAccess().getOrderOrderParserRuleCall_4_0());
				}
				lv_order_4_0=ruleOrder
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSQLQueryRule());
					}
					set(
						$current,
						"order",
						lv_order_4_0,
						"org.xtext.example.mydsl.SocialRequest.Order");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleSelect
entryRuleSelect returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectRule()); }
	iv_ruleSelect=ruleSelect
	{ $current=$iv_ruleSelect.current; }
	EOF;

// Rule Select
ruleSelect returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SELECT'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectAccess().getSELECTKeyword_0());
		}
		(
			(
				lv_isDistinct_1_0='DISTINCT'
				{
					newLeafNode(lv_isDistinct_1_0, grammarAccess.getSelectAccess().getIsDistinctDISTINCTKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed($current, "isDistinct", true, "DISTINCT");
				}
			)
		)?
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				lv_clause_3_0=RULE_STRING
				{
					newLeafNode(lv_clause_3_0, grammarAccess.getSelectAccess().getClauseSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectRule());
					}
					setWithLastConsumed(
						$current,
						"clause",
						lv_clause_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getSelectAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFrom
entryRuleFrom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFromRule()); }
	iv_ruleFrom=ruleFrom
	{ $current=$iv_ruleFrom.current; }
	EOF;

// Rule From
ruleFrom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FROM'
		{
			newLeafNode(otherlv_0, grammarAccess.getFromAccess().getFROMKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getFromAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFromRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getFromAccess().getEntityEntityCrossReference_2_0());
				}
			)
		)
		(
			(
				lv_alias_3_0=RULE_ID
				{
					newLeafNode(lv_alias_3_0, grammarAccess.getFromAccess().getAliasIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFromRule());
					}
					setWithLastConsumed(
						$current,
						"alias",
						lv_alias_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFromAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleJoin
entryRuleJoin returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJoinRule()); }
	iv_ruleJoin=ruleJoin
	{ $current=$iv_ruleJoin.current; }
	EOF;

// Rule Join
ruleJoin returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getJoinAccess().getJoinTypeJoinTypeEnumRuleCall_0_0());
				}
				lv_joinType_0_0=ruleJoinType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getJoinRule());
					}
					set(
						$current,
						"joinType",
						lv_joinType_0_0,
						"org.xtext.example.mydsl.SocialRequest.JoinType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getJoinAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJoinRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getJoinAccess().getEntityEntityCrossReference_2_0());
				}
			)
		)
		(
			(
				lv_alias_3_0=RULE_ID
				{
					newLeafNode(lv_alias_3_0, grammarAccess.getJoinAccess().getAliasIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJoinRule());
					}
					setWithLastConsumed(
						$current,
						"alias",
						lv_alias_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getJoinAccess().getRightCurlyBracketKeyword_4());
		}
		(
			otherlv_5='ON'
			{
				newLeafNode(otherlv_5, grammarAccess.getJoinAccess().getONKeyword_5_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getJoinAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					lv_joinCondition_7_0=RULE_STRING
					{
						newLeafNode(lv_joinCondition_7_0, grammarAccess.getJoinAccess().getJoinConditionSTRINGTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getJoinRule());
						}
						setWithLastConsumed(
							$current,
							"joinCondition",
							lv_joinCondition_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getJoinAccess().getRightCurlyBracketKeyword_5_3());
			}
		)?
	)
;

// Entry rule entryRuleWhere
entryRuleWhere returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhereRule()); }
	iv_ruleWhere=ruleWhere
	{ $current=$iv_ruleWhere.current; }
	EOF;

// Rule Where
ruleWhere returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='WHERE'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhereAccess().getWHEREKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getWhereAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_condition_2_0=RULE_STRING
				{
					newLeafNode(lv_condition_2_0, grammarAccess.getWhereAccess().getConditionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWhereRule());
					}
					setWithLastConsumed(
						$current,
						"condition",
						lv_condition_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhereAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleOrder
entryRuleOrder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderRule()); }
	iv_ruleOrder=ruleOrder
	{ $current=$iv_ruleOrder.current; }
	EOF;

// Rule Order
ruleOrder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ORDER BY'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrderAccess().getORDERBYKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrderAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				lv_order_2_0=RULE_STRING
				{
					newLeafNode(lv_order_2_0, grammarAccess.getOrderAccess().getOrderSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOrderRule());
					}
					setWithLastConsumed(
						$current,
						"order",
						lv_order_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getOrderAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getSTRINGEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='long'
			{
				$current = grammarAccess.getDataTypeAccess().getLONGEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getLONGEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='float'
			{
				$current = grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='double'
			{
				$current = grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='char'
			{
				$current = grammarAccess.getDataTypeAccess().getCHAREnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getCHAREnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='int'
			{
				$current = grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getDataTypeAccess().getINTEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='boolean'
			{
				$current = grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='Date'
			{
				$current = grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_7());
			}
		)
	)
;

// Rule JoinType
ruleJoinType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='LEFT JOIN'
			{
				$current = grammarAccess.getJoinTypeAccess().getLEFT_JOINEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getJoinTypeAccess().getLEFT_JOINEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='LEFT OUTER JOIN'
			{
				$current = grammarAccess.getJoinTypeAccess().getLEFT_OUTER_JOINEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getJoinTypeAccess().getLEFT_OUTER_JOINEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='CROSS JOIN'
			{
				$current = grammarAccess.getJoinTypeAccess().getCROSS_JOINEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getJoinTypeAccess().getCROSS_JOINEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='JOIN'
			{
				$current = grammarAccess.getJoinTypeAccess().getJOINEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getJoinTypeAccess().getJOINEnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_POSSIBLY_SIGNED_INT : '-'? RULE_INT;

RULE_GENERATIONTYPE : ('AUTO'|'TABLE'|'IDENTITY'|'SEQUENCE');

RULE_FETCHTYPE : ('EAGER'|'LAZY');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
